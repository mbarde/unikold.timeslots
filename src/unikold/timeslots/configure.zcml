<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="unikold.timeslots">

  <i18n:registerTranslations directory="locales" />

  <!--
    Be careful if you use general includeDependencies, it can have sideffects!
    Better import explicite packages or configurations ;)
  -->
  <!--<includeDependencies package="." />-->

  <include package=".browser" />

  <include file="permissions.zcml" />

  <include file="upgrades.zcml" />

  <genericsetup:registerProfile
      name="default"
      title="unikold.timeslots"
      directory="profiles/default"
      description="Installs the unikold.timeslots add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.post_install"
      />

  <genericsetup:registerProfile
      name="uninstall"
      title="unikold.timeslots (uninstall)"
      directory="profiles/uninstall"
      description="Uninstalls the unikold.timeslots add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.uninstall"
      />

  <utility
      factory=".setuphandlers.HiddenProfiles"
      name="unikold.timeslots-hiddenprofiles"
      />

  <!-- extended converter for timedelta fields to make it compatible to
       timepicker inputs -->
  <adapter factory=".converter.DayTimeDataConverter" />

  <!-- set day id & title manually on creation and change -->
  <subscriber
      for=".content.ut_day.IUTDay
           zope.lifecycleevent.interfaces.IObjectAddedEvent"
      handler=".content.ut_day.autoSetID"
    />
  <subscriber
      for=".content.ut_day.IUTDay
           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
      handler=".content.ut_day.autoSetID"
    />

  <!-- set timeslot id & title manually on creation and modification -->
  <subscriber
      for=".content.ut_timeslot.IUTTimeslot
           zope.lifecycleevent.interfaces.IObjectAddedEvent"
      handler=".content.ut_timeslot.autoSetID"
    />
  <subscriber
      for=".content.ut_timeslot.IUTTimeslot
           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
      handler=".content.ut_timeslot.autoSetID"
    />

  <!-- set timeslot id & title manually on creation and modification -->
  <subscriber
      for=".content.ut_timeslot.IUTTimeslot
           zope.lifecycleevent.interfaces.IObjectAddedEvent"
      handler=".content.ut_timeslot.autoSetID"
    />
  <subscriber
      for=".content.ut_timeslot.IUTTimeslot
           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
      handler=".content.ut_timeslot.autoSetID"
    />

  <!-- set person id & title manually on creation and modification -->
  <subscriber
      for=".content.ut_person.IUTPerson
           zope.lifecycleevent.interfaces.IObjectAddedEvent"
      handler=".content.ut_person.autoSetID"
    />
  <subscriber
      for=".content.ut_person.IUTPerson
           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
      handler=".content.ut_person.autoSetID"
    />

  <!-- send out emails on workflow actions for persons
       (use Products.DCWorkflow.interfaces.IAfterTransitionEvent
        to be able to access previous wf state) -->
  <subscriber
    for=".content.ut_person.IUTPerson
         Products.DCWorkflow.interfaces.IAfterTransitionEvent"
    handler=".subscribers.sendNotification"
  />

</configure>
